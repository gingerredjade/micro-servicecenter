server:
  tomcat:
    uri-encoding: UTF-8
  # 所有REST API消费者的入口点
  port: 9000

spring:
  application:
    name: sc-api-gateway
  profiles:
    include: common
  cloud:
    service-registry:
      auto-registration:
        enabled: true
    config:
      discovery:
        enabled: false
        service-id: CONFIG
      profile: dev
  servlet:
    multipart:
      # 配置文件传输
      enabled: true
      file-size-threshold: 0
      # 单个文件数据大小
      max-file-size: 100Mb
      # 单个请求的文件数据总上传大小
      max-request-size: 100Mb
      resolve-lazily: false




eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
      #defaultZone: http://eureka1:8761/eureka/,http://eureka2:8762/eureka/
    registry-fetch-interval-seconds: 30
  instance:
    # 是否将自己的IP注册到Server，不设或设为false将OS的hostname注册到Server
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 2

management:
  endpoints:
    web:
      exposure:
        include: "*"


# 配置自定义路由
zuul:
  add-host-header: true
  host:
    connect-timeout-millis: 15000   # HTTP连接超时大于Hystrix的超时时间
    socket-timeout-millis: 60000    # socket超时
  # 全部服务忽略敏感头(全部服务都可以传递cookie)
  sensitive-headers:
  routes:
    api-servicecore:
      path: /sc-service/**
      serviceId: sc-service-core
  # 排除某些路由
  ignored-patterns:
    #- /**/getServerMsg
    #- /myProduct/getServerMsg
    #- /sc-service-core/getServerMsg
  thread-pool:
      use-separate-thread-pools: true
      thread-pool-key-prefix: zuulsc


# 设置API网关中路由转发请求的HystrixCommand执行超时时间，单位毫秒
# 要大于(RibbonReadTimeout+RibbonConnectTimeout)*(MaxAutoRetries+1)*(MaxAutoRetriesNextServer+1)
# MaxAutoRetries默认0，MaxAutoRetriesNextServer默认1
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 240000


# 设置路由转发请求时创建请求连接的超时时间、路由转发请求的超时时间。
# 断路器Hystrix的超时时间需大于Ribbon的超时时间
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000


# 是否启用权限校验、访问权限校验：true/false。若authority.enabled=false则不进行任何网关校验,一般默认true
# authority.access.enabled表示是否开启访问权限校验
authority:
  enabled: false
  access:
    enabled: false


